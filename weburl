package main

//  Package url parses URLs and implements query escaping.
import (
	"fmt"
	"net/url"
)

const myurl string = "https://www.irctc.co.in/nget/train-search?trainname=supefast&paymentid=gsrg472jg"

func main() {
	fmt.Println("Welcome to handling URLs in golang")
	fmt.Println(myurl)

	//parsing
	result, _ := url.Parse(myurl)

	// fmt.Println(result.Scheme)
	// fmt.Println(result.Host)
	// fmt.Println(result.Path)
	// fmt.Println(result.Port())

	//RawQuery    string    // encoded query values, without '?'
	fmt.Println(result.RawQuery)

	//Query parses RawQuery and returns the corresponding values. It silently discards malformed value pairs. To check errors use ParseQuery.
	qparams := result.Query()
	fmt.Printf("The type of query params are: %T\n", qparams)

	fmt.Println(qparams["trainname"])

	// iterating through key value pairs using  range keyword
	for _, val := range qparams {
		fmt.Println("Param is: ", val)
	}

	partsOfUrl := &url.URL{
		Scheme:  "https",
		Host:    "irctc.co.in",
		Path:    "/nget/train-search",
		RawPath: "user=askv",
	}

	anotherURL := partsOfUrl.String()
	fmt.Println(anotherURL)

}
